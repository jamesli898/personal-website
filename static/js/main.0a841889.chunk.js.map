{"version":3,"sources":["Example.js","About.js","CurrentWork.js","NavigationBar.js","IAm.js","ExperienceTile.js","Experience.js","App.js","serviceWorker.js","index.js","assets/images/less-hectic-city.jpg"],"names":["Example","this","props","number","React","Component","About","className","classname","align","CurrentWork","NavigationBar","IAm","ExperienceTile","experiencedate","experienceheader","experiencedescription","experiencetoolsheader","experiencetools","projects","Experience","map","item","App","src","cityimage","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"6PASeA,E,iLANX,OACA,oDAA0BC,KAAKC,MAAMC,OAArC,S,GAHkBC,IAAMC,WCcbC,E,iLAZX,OACE,yBAAKC,UAAY,iBACX,qCACI,uBAAGC,UAAY,YAAYC,MAAQ,UAAnC,iH,GALIL,IAAMC,WCcXK,E,iLAZT,OACE,yBAAKH,UAAY,uBACb,4CACI,kM,GALUH,IAAMC,WCcjBM,E,iLAZX,OACI,yBAAKJ,UAAY,yBACf,4BACE,qCACA,oCACA,6C,GAPgBH,IAAMC,WCYnBO,E,iLAVX,OACE,yBAAKL,UAAY,eACf,uBAAGC,UAAY,UAAUC,MAAQ,UAAjC,oB,GAJUL,IAAMC,WCyBTQ,E,iLAvBX,OAEE,yBAAKN,UAAY,0BACf,uBAAGC,UAAY,qBAAqBC,MAAQ,QAC3CR,KAAKC,MAAMY,gBAEZ,wBAAIN,UAAY,uBAAuBC,MAAQ,QAC9CR,KAAKC,MAAMa,kBAEZ,uBAAGP,UAAY,4BAA4BC,MAAQ,QAClDR,KAAKC,MAAMc,uBAEZ,wBAAIR,UAAY,4BAA4BC,MAAQ,QACnDR,KAAKC,MAAMe,uBAEZ,uBAAGT,UAAY,sBAAsBC,MAAQ,QAC5CR,KAAKC,MAAMgB,sB,GAlBSd,IAAMC,WCE7Bc,EAAW,CACf,CACAL,eAAgB,UAChBC,iBAAkB,WAClBC,sBAAuB,qLACvBC,sBAAuB,0BACvBC,gBAAiB,+BAEjB,CACAJ,eAAgB,UAChBC,iBAAkB,WAClBC,sBAAuB,6LACvBC,sBAAuB,0BACvBC,gBAAiB,mBAEjB,CACAJ,eAAgB,sBAChBC,iBAAkB,sBAClBC,sBAAuB,kRACvBC,sBAAuB,0BACvBC,gBAAiB,qGAEjB,CACAJ,eAAgB,sBAChBC,iBAAkB,wBAClBC,sBAAuB,uRACvBC,sBAAuB,0BACvBC,gBAAiB,8DAiBJE,E,iLAXX,OACE,yBAAKb,UAAY,sBACdY,EAASE,KAAI,SAACC,GAAD,OAAW,kBAAC,EAAmBA,W,GAJ5BlB,IAAMC,W,gBCJhBkB,MAnBf,WAEE,OACE,yBAAKhB,UAAU,OACb,4BAAQA,UAAU,cAClB,2CACE,yBAAKiB,IAAKC,IAAWlB,UAAU,aAAamB,IAAI,oBAChD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASvB,OAAS,KAEpB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCZcwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBEnInBC,EAAOC,QAAU,IAA0B,8C","file":"static/js/main.0a841889.chunk.js","sourcesContent":["import React from 'react';\nclass Example extends React.Component {\n  render() {\n    return (\n    <p> your magic number is {this.props.number} </p>\n    );\n  }\n}\n\nexport default Example;\n","import React from 'react';\nclass About extends React.Component {\n  render() {\n    return (\n      <div className = 'About-section'>\n            <h3>About</h3>  \n                <p classname = 'App-about' align = 'Center'>\n                I’m James Li, an entrepreneur and student at UC Berkeley \n                studying EECS and Business Administration.\n                </p>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nclass CurrentWork extends React.Component {\n  render() {\n      return (\n        <div className = 'CurrentWork-section'>\n            <h3>Current Work</h3>\n                <p>\n                I’m building and testing prototypes for my startup, SportVue LLC. I’m also a \n                software developer at CodeBase, building a website for EthiCAL Apparel. \n                </p>\n        </div>\n      );\n  }\n}\n\nexport default CurrentWork;","import React from 'react';\nclass NavigationBar extends React.Component {\nrender() {\n    return (\n        <div className = \"NavigationBar-section\">\n          <ul>\n            <li>About</li>\n            <li>Work</li>\n            <li>Connect</li>\n          </ul>\n        </div>\n    );\n  }\n}\n\nexport default NavigationBar;","import React from 'react';\nclass IAm extends React.Component {\n  render() {\n    return (\n      <div className = 'IAm-section'>\n        <p classname = 'App-IAm' align = 'Center'>\n        I am ......\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default IAm;","import React from 'react';\nclass ExperienceTile extends React.Component {\n  render() {\n    return (\n      //how do i input dofferent text for this.props.text?\n      <div className = 'ExperienceTile-section'>\n        <p classname = 'ExperienceTileDate' align = 'left'>\n        {this.props.experiencedate}\n        </p>\n        <h3 classname = 'ExperienceTileHeader' align = 'left'>\n        {this.props.experienceheader}\n        </h3>  \n        <p classname = 'ExperienceTileDescription' align = 'left'>\n        {this.props.experiencedescription}\n        </p>\n        <h5 classname = 'ExperienceTileToolsHeader' align = 'left'>\n        {this.props.experiencetoolsheader}\n        </h5>\n        <p classname = 'ExperienceTileTools' align = 'left'>\n        {this.props.experiencetools}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ExperienceTile;\n","import React from 'react';\nimport ExperienceTile from './ExperienceTile';\n\nconst projects = [\n  {\n  experiencedate: 'Current',\n  experienceheader: 'SportVue',\n  experiencedescription: 'Building an ice hockey earpiece to track a player’s head orientation and a complementary mobile app that will allow players to track their metrics during games and practices',\n  experiencetoolsheader: 'Services/Tools Utilized',\n  experiencetools: 'Arduino, Fusion 360, Python', \n  },\n  {\n  experiencedate: 'Current',\n  experienceheader: 'CodeBase',\n  experiencedescription: 'Working as a software developer for a student agency that supports 15+ industry-leading clients. Currently building a personal website and will be building a website for EthiCAL Apparel.',\n  experiencetoolsheader: 'Services/Tools Utilized',\n  experiencetools: 'p5.js, React.js', \n  },\n  {\n  experiencedate: 'Sep 2015 - Dec 2018',\n  experienceheader: 'bestmobilecoins.com',\n  experiencedescription: 'E-commerce store that sold Madden Mobile and NBA Live Mobile coins. I farmed coins, used Gusto for accounting , advertised on Google Adwords and YouTube, and led a small team of freelancers for website maintenance. Received 11,501 orders amounting to $239,038 in revenue.',\n  experiencetoolsheader: 'Services/Tools Utilized',\n  experiencetools: 'Gusto, Upwork, Shopify, iOS AutoTouch, Android OS HiroMacro, Google Adwords, YouTube Sponsorships',\n  },\n  {\n  experiencedate: 'Aug 2017 - Jun 2019',\n  experienceheader: 'Scientific Researcher',\n  experiencedescription: 'Thermally modeled heat-trapping roofing patterns and verified results with physical experimentation, resulting in roofing surfaces that can decrease the heating load and energy usage of buildings. Won first place in category at the Virginia State Science and Engineering Fair.',\n  experiencetoolsheader: 'Services/Tools Utilized',\n  experiencetools: 'ANSYS Meshing, ANSYS Fluent, CFD Post, Vernier LabQuest 2',\n  },\n];\n\nclass Experience extends React.Component {\n  render() {\n    return (\n      <div className = 'Experience-section'>\n        {projects.map((item) => (<ExperienceTile {...item}/>))}\n      </div>\n      //<Modal {...person} title='Modal heading' animation={false} />\n      //is equal to\n      //<Modal name={person.name} age={person.age} title='Modal heading' animation={false} />\n    );\n  }\n}\n\nexport default Experience;\n","import React from 'react';\nimport './App.css';\nimport Example from './Example';\nimport About from './About';\nimport CurrentWork from './CurrentWork';\nimport NavigationBar from './NavigationBar';\nimport IAm from './IAm';\nimport Experience from './Experience';\n\nimport cityimage from './assets/images/less-hectic-city.jpg';\n\nfunction App() {\n  //todo: add all coursework and fill out experience (starups, code, etc)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>James Y. Li</h1>\n        <img src={cityimage} className=\"city-image\" alt=\"image of a city\" />\n        <IAm/>\n        <Example number ={5}/>\n      </header>\n      <NavigationBar/>\n      <About/>\n      <CurrentWork/>\n      <Experience/>\n    </div>\n    \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/less-hectic-city.e0c8b1c6.jpg\";"],"sourceRoot":""}